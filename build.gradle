
buildscript {
    ext {
        kotlinVersion = '1.3.50'
        wpiLibVersion = "2019.4.1"
        junit5Version = "5.4.2"
        gdxVersion = '1.9.10'
        box2DLightsVersion = '1.4'
        dokka_version = "0.10.0"
        abstractDashboardVersion = "v1.1.0"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
    }
}
plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "org.jetbrains.dokka" version "$dokka_version"
//    id "maven-publish"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
    subProjects = ["api", "wpi", "gdx"]
}

allprojects {

    version = '1.0'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "http://first.wpi.edu/FRC/roborio/maven/release"}
        maven { url "https://jitpack.io" }
    }

}
subprojects {
    apply plugin: "kotlin"
    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version"
    }
    test {
        useJUnitPlatform()
    }
    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
//    task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
//        from javadoc.destinationDir
//        classifier = 'javadoc'
//    }
    task packageSources(type: Jar) {
        archiveClassifier.set("sources")
        from sourceSets.main.allSource
    }
    task javadocJar(type: Jar, dependsOn: dokka) {
        from dokka.outputDirectory
        archiveClassifier.set("javadoc")
    }
    artifacts {
//        archives packageJavadoc
        archives javadocJar
        archives packageSources
    }
//    publishing {
//        publications {
//            mavenAar(MavenPublication) {
//                afterEvaluate {
//                    artifact packageSources
//                    artifact javadocJar
//                }
//            }
//        }
//    }
}
//publishing {
//    publications {
//        mavenAar(MavenPublication) {
//            from components.java
//            afterEvaluate {
////                artifact dokkaJar
//            }
//        }
//    }
//}

project(":api"){
    dependencies {
//        // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
//        api group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'
    }
}

project(":gdx") {
    apply plugin: "kotlin"
    dependencies {
        api project(":api")
    }
}
project(":desktop") {
    dependencies {
        api project(":gdx")
    }
}
project(":wpi"){
    dependencies {
        api project(":api")
    }
}
